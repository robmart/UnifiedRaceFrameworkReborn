template character_age_or_death_text
{
    hbox = {
        block "list_layout" {
            minimum_size = { 62 0 }
            expand = {}
        }

        margin_right = 5
        spacing = 2

        ### URF CHANGES START ###
        block "character_age"
        {
            text = {
                text = "[Character.GetAge]"
                visible = "[Not(GreaterThanOrEqualTo_int32(Character.GetAge, '(int32)866'))]"
                align = nobaseline
            }
            ### URF Character Age Changes #
            text = {
                text = "UNKNOWN_AGE"
                visible = "[GreaterThanOrEqualTo_int32(Character.GetAge, '(int32)866')]"
                align = nobaseline
            }
        }
        ### URF CHANGES END ###

        icon = {
            visible = "[Not(Character.IsDeadAndValid)]"
            size = { 23 23 }
            framesize = { 60 60 }
            frame = "[Character.GetHealthIconFrame]"
            texture = "gfx/interface/icons/character_status/icon_health.dds"
            tooltip = "[Character.GetHealthInfo]"
        }

        block "is_dead"
        {
            icon = {
                name = "is_dead"
                visible = "[Character.IsDeadAndValid]"
                size = { 23 23 }

                texture = "[Character.GetDeathReasonIcon]"
                tooltip = "CHARACTER_DEAD_TOOLTIP"
            }
        }
    }
}

types Lists
{
    type hbox_traits_list = hbox
    {
        layout_policy_horizontal = expanding
        ### URF Race Changes ###
        hbox = {
            visible = "[CharacterWindow.GetCharacter.MakeScope.Var('urf_phenotype').IsSet]"
            container = {
                button = {
                    name = "race_button"
                    texture =  "[GetCultureInnovationType(Concatenate('urf_phenotype_', CharacterWindow.GetCharacter.MakeScope.Var('urf_phenotype').GetFlagName)).GetIcon]"
                    tooltip_widget = { multiplayer_lobby_race_tooltip = {} }
                    using = tooltip_ws
                    size = { 40 40 }
                }
            }
        }

        hbox = {
            visible = "[CharacterWindow.GetCharacter.MakeScope.Var('urf_phenotype').IsSet]"
            layout_policy_vertical = expanding
            margin = { 5 10 }

            divider_light = {
                layout_policy_vertical = expanding
            }
        }
        ### URF Race Changes ###

        widget = {
            layout_policy_horizontal = expanding
            size = { 0 55 }

            hbox = {
                name = "3_personality_traits"
                visible = "[LessThanOrEqualTo_int32(GetDataModelSize(TraitArrays.GetPersonalityTraits), '(int32)3')]"

                fixed_grid_box = {
                    name = "personality_traits"
                    data_model = "[TraitArrays.GetPersonalityTraits]"
                    flip_direction = yes
                    add_column = 54
                    add_row = 55
                    max_horizontal_slots = 3

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 55 55 }
                            }
                        }
                    }
                }

                hbox = {
                    visible = "[Not(IsDataModelEmpty(TraitArrays.GetTraits))]"
                    layout_policy_vertical = expanding
                    margin = { 5 10 }

                    divider_light = {
                        layout_policy_vertical = expanding
                    }
                }

                fixed_grid_box = {
                    name = "traits_big"
                    data_model = "[TraitArrays.GetTraits]"
                    visible = "[LessThanOrEqualTo_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)4')]" ### URF
                    flip_direction = yes
                    add_column = 54
                    add_row = 55
                    max_horizontal_slots = 5
                    max_vertical_slots = 1

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 55 55 }
                            }
                        }
                    }
                }

                fixed_grid_box = {
                    name = "traits_medium"
                    data_model = "[TraitArrays.GetTraits]"
                    visible = "[And(GreaterThan_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)4'), LessThanOrEqualTo_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)6'))]" ### URF
                    flip_direction = yes
                    add_column = 38 ### URF
                    add_row = 39 ### URF
                    max_horizontal_slots = 7
                    max_vertical_slots = 1

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 39 39 } ### URF
                            }

                            block_override "glow_radius"
                            {
                                glow_radius = 4
                            }
                        }
                    }
                }

                fixed_grid_box = {
                    name = "traits_small"
                    data_model = "[TraitArrays.GetTraits]"
                    visible = "[And(GreaterThan_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)6'), LessThanOrEqualTo_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)8'))]" ### URF
                    flip_direction = yes
                    add_column = 28
                    add_row = 29
                    max_horizontal_slots = 8 ### URF
                    max_vertical_slots = 1

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 29 29 }
                            }

                            block_override "glow_radius"
                            {
                                glow_radius = 3
                            }
                        }
                    }
                }

                fixed_grid_box = {
                    name = "traits_tiny"
                    data_model = "[TraitArrays.GetTraits]"
                    visible = "[GreaterThan_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)8')]"
                    flip_direction = yes
                    add_column = 24
                    add_row = 25
                    max_horizontal_slots = 9 ### URF
                    data_model_wrap = 9 ### URF
                    max_vertical_slots = 2

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 25 25 }
                            }

                            block_override "glow_radius"
                            {
                                glow_radius = 2
                            }
                        }
                    }
                }

                expand = {}
            }

            hbox = {
                name = "4_personality_traits"
                visible = "[GreaterThan_int32(GetDataModelSize(TraitArrays.GetPersonalityTraits), '(int32)3')]"

                fixed_grid_box = {
                    name = "personality_traits"
                    data_model = "[TraitArrays.GetPersonalityTraits]"
                    flip_direction = yes
                    add_column = 54
                    add_row = 55
                    max_horizontal_slots = 4

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 55 55 }
                            }
                        }
                    }
                }

                hbox = {
                    visible = "[Not(IsDataModelEmpty(TraitArrays.GetTraits))]"
                    layout_policy_vertical = expanding
                    margin = { 5 10 }

                    divider_light = {
                        layout_policy_vertical = expanding
                    }
                }

                fixed_grid_box = {
                    name = "traits_big"
                    data_model = "[TraitArrays.GetTraits]"
                    visible = "[LessThanOrEqualTo_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)3')]" ### URF
                    flip_direction = yes
                    add_column = 54
                    add_row = 55
                    max_horizontal_slots = 3 ### URF
                    max_vertical_slots = 1

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 55 55 }
                            }
                        }
                    }
                }

                fixed_grid_box = {
                    name = "traits_medium"
                    data_model = "[TraitArrays.GetTraits]"
                    visible = "[And(GreaterThan_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)3'), LessThanOrEqualTo_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)5'))]" ### URF
                    flip_direction = yes
                    add_column = 35
                    add_row = 35
                    max_horizontal_slots = 5 ### URF
                    max_vertical_slots = 1

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 35 35 }
                            }

                            block_override "glow_radius"
                            {
                                glow_radius = 4
                            }
                        }
                    }
                }

                fixed_grid_box = {
                    name = "traits_small"
                    data_model = "[TraitArrays.GetTraits]"
                    visible = "[And(GreaterThan_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)5'), LessThanOrEqualTo_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)6'))]" ### URF
                    flip_direction = yes
                    add_column = 28
                    add_row = 29
                    max_horizontal_slots = 6 ### URF
                    max_vertical_slots = 1

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 29 29 }
                            }

                            block_override "glow_radius"
                            {
                                glow_radius = 3
                            }
                        }
                    }
                }

                fixed_grid_box = {
                    name = "traits_tiny"
                    data_model = "[TraitArrays.GetTraits]"
                    visible = "[GreaterThan_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)6')]" ### URF
                    flip_direction = yes
                    add_column = 24
                    add_row = 25
                    max_horizontal_slots = 6 ### URF
                    data_model_wrap = 6 ### URF
                    max_vertical_slots = 2

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 25 25 }
                            }

                            block_override "glow_radius"
                            {
                                glow_radius = 2
                            }
                        }
                    }
                }

                expand = {}
            }
        }
        expand = {}
    }

    type hbox_traits_list_small = hbox
    {
        layout_policy_horizontal = expanding

        ### URF Race Changes ###
        hbox = {
            visible = "[CharacterWindow.GetCharacter.MakeScope.Var('urf_phenotype').IsSet]"
            container = {
                button = {
                    name = "race_button"
                    texture =  "[GetCultureInnovationType(Concatenate('urf_phenotype_', CharacterWindow.GetCharacter.MakeScope.Var('urf_phenotype').GetFlagName)).GetIcon]"
                    tooltip_widget = { multiplayer_lobby_race_tooltip = {} }
                    using = tooltip_ws
                    size = { 40 40 }
                }
            }
        }

        hbox = {
            visible = "[CharacterWindow.GetCharacter.MakeScope.Var('urf_phenotype').IsSet]"
            layout_policy_vertical = expanding
            margin = { 5 10 }

            divider_light = {
                layout_policy_vertical = expanding
            }
        }
        ### URF Race Changes ###

        widget = {
            layout_policy_horizontal = expanding
            size = { 0 55 }

            hbox = {
                name = "3_personality_traits"
                visible = "[LessThanOrEqualTo_int32(GetDataModelSize(TraitArrays.GetPersonalityTraits), '(int32)3')]"

                fixed_grid_box = {
                    name = "personality_traits"
                    data_model = "[TraitArrays.GetPersonalityTraits]"
                    flip_direction = yes
                    add_column = 54
                    add_row = 55
                    max_horizontal_slots = 3

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 55 55 }
                            }
                        }
                    }
                }

                hbox = {
                    visible = "[Not(IsDataModelEmpty(TraitArrays.GetTraits))]"
                    layout_policy_vertical = expanding
                    margin = { 5 10 }

                    divider_light = {
                        layout_policy_vertical = expanding
                    }
                }

                fixed_grid_box = {
                    name = "traits_big"
                    data_model = "[TraitArrays.GetTraits]"
                    visible = "[LessThanOrEqualTo_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)4')]"
                    flip_direction = yes
                    add_column = 39
                    add_row = 40
                    max_horizontal_slots = 4
                    max_vertical_slots = 1

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 40 40 }
                            }
                        }
                    }
                }

                fixed_grid_box = {
                    name = "traits_small"
                    data_model = "[TraitArrays.GetTraits]"
                    visible = "[And(GreaterThan_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)4'), LessThanOrEqualTo_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)6'))]"
                    flip_direction = yes
                    add_column = 28
                    add_row = 29
                    max_horizontal_slots = 6
                    max_vertical_slots = 1

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 29 29 }
                            }

                            block_override "glow_radius"
                            {
                                glow_radius = 3
                            }
                        }
                    }
                }

                fixed_grid_box = {
                    name = "traits_tiny"
                    data_model = "[TraitArrays.GetTraits]"
                    visible = "[GreaterThan_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)6')]"
                    flip_direction = yes
                    add_column = 24
                    add_row = 25
                    max_horizontal_slots = 7
                    data_model_wrap = 7
                    max_vertical_slots = 2

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 25 25 }
                            }

                            block_override "glow_radius"
                            {
                                glow_radius = 2
                            }
                        }
                    }
                }

                expand = {}
            }

            hbox = {
                name = "4_personality_traits"
                visible = "[GreaterThan_int32(GetDataModelSize(TraitArrays.GetPersonalityTraits), '(int32)3')]"

                fixed_grid_box = {
                    name = "personality_traits"
                    data_model = "[TraitArrays.GetPersonalityTraits]"
                    flip_direction = yes
                    add_column = 54
                    add_row = 55
                    max_horizontal_slots = 4

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 55 55 }
                            }
                        }
                    }
                }

                hbox = {
                    visible = "[Not(IsDataModelEmpty(TraitArrays.GetTraits))]"
                    layout_policy_vertical = expanding
                    margin = { 5 10 }

                    divider_light = {
                        layout_policy_vertical = expanding
                    }
                }

                fixed_grid_box = {
                    name = "traits_big"
                    data_model = "[TraitArrays.GetTraits]"
                    visible = "[LessThanOrEqualTo_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)4')]"
                    flip_direction = yes
                    add_column = 39
                    add_row = 40
                    max_horizontal_slots = 4
                    max_vertical_slots = 1

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 40 40 }
                            }
                        }
                    }
                }

                fixed_grid_box = {
                    name = "traits_small"
                    data_model = "[TraitArrays.GetTraits]"
                    visible = "[And(GreaterThan_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)4'), LessThanOrEqualTo_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)6'))]"
                    flip_direction = yes
                    add_column = 28
                    add_row = 29
                    max_horizontal_slots = 6
                    max_vertical_slots = 1

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 29 29 }
                            }

                            block_override "glow_radius"
                            {
                                glow_radius = 3
                            }
                        }
                    }
                }

                fixed_grid_box = {
                    name = "traits_tiny"
                    data_model = "[TraitArrays.GetTraits]"
                    visible = "[GreaterThan_int32(GetDataModelSize(TraitArrays.GetTraits), '(int32)6')]"
                    flip_direction = yes
                    add_column = 24
                    add_row = 25
                    max_horizontal_slots = 6
                    data_model_wrap = 6
                    max_vertical_slots = 2

                    item = {
                        icon_trait = {
                            block_override "icon_size"
                            {
                                size = { 25 25 }
                            }

                            block_override "glow_radius"
                            {
                                glow_radius = 2
                            }
                        }
                    }
                }

                expand = {}
            }
        }
        expand = {}
    }
}
